version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: ${APP_NODE_VERSION}
    commands:
      # Change to base dir
      - cd ${APP_BASE_DIR}

      # Extract downloaded node_modules cache if any
      - |
        if [ -f "node_modules.tar.gz" ]; then
          echo Unzipping node_modules cache
          tar -zxf node_modules.tar.gz && echo "extract cached deps succeeded" || echo "extract cached deps failed"
        fi

      # VCS Ops
      - VCS_PR_NUMBER=$(echo $CODEBUILD_WEBHOOK_TRIGGER | sed 's/pr\///g')
      - echo "${CODEBUILD_WEBHOOK_EVENT} triggered for pull request ${VCS_PR_NUMBER}"

      # Install dependencies
      - echo Installing app dependencies ...
      - ${APP_INSTALL_CMD}

  pre_build:
    commands:
      # Pull parameters and save to .env
      - |
        echo Pulling parameters and exporting to .env file...
        aws secretsmanager get-secret-value --secret-id ${APP_PARAMETERS_ID} --query SecretString --output text \
        | jq -r 'to_entries|map("\(.key)=\(.value|tostring)")|.[]' > .env

  build:
    commands:
      # Build, deploy and invalidate web cache
      - echo Building static site...
      - ${APP_BUILD_CMD}
      - aws s3 sync ${APP_BUILD_DIR}/. s3://${APP_S3_WEB_BUCKET}/${VCS_PR_NUMBER} --delete --acl public-read --only-show-errors
      - aws cloudfront create-invalidation --distribution-id ${APP_DISTRIBUTION_ID} --paths '/*'

      # Notify deploy preview ready
      - |
        if [[ $CODEBUILD_WEBHOOK_EVENT == "PULL_REQUEST_CREATED" ]]; then
          APP_PREVIEW_URL="https://${VCS_PR_NUMBER}-${APP_PREVIEW_BASE_FQDN}"
          APP_PREVIEW_COMMENT="‚úîÔ∏è Deploy Preview is ready! <br /><br />üòé Browse the preview: ${APP_PREVIEW_URL}"
          VCS_PR_URL="https://api.github.com/repos/${VCS_OWNER}/${VCS_REPO_NAME}/issues/${VCS_PR_NUMBER}/comments"
          curl -s -S -f -o /dev/null ${VCS_PR_URL} -H "Authorization: token ${VCS_TOKEN}" -d '{"body": "'"$APP_PREVIEW_COMMENT"'"}'
        fi

  post_build:
    commands:
      # Save node_modules cache
      - tar -zcf node_modules.tar.gz node_modules && echo "compress deps succeeded" || echo "compress deps failed"

cache:
  paths:
    - 'node_modules.tar.gz'
